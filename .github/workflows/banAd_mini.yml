name: Sync BanAd_mini Rule

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 每天 00:00 UTC 执行

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download ADs_merged.txt
        run: |
          mkdir -p temp_repo
          mkdir -p rules
          curl -L raw.githubusercontent.com/wuiiled/Wuiiled_Setup/refs/heads/mihomo/rules/ADs_merged.txt -o temp_repo/ADs_merged.txt || true

      - name: Install dependencies
        run: npm install fs-extra yaml

      - name: Merge ADs_merged.txt -> rules/banAd_mini.json
        run: |
          node <<'EOF'
          const fs = require('fs-extra');
          const path = require('path');

          (async () => {
            try {
              const adsTxtPath = 'temp_repo/ADs_merged.txt';
              const outputPath = 'rules/banAd_mini.json';

              const combined = { domain: [], domain_suffix: [], domain_regex: [] };

              const normalizeLine = (raw) => {
                if (!raw || typeof raw !== 'string') return '';
                let s = raw.trim();
                s = s.replace(/^(\s*DOMAIN\S*\s*[,:\-]*\s*)+/i, '');
                return s.trim();
              };

              if (await fs.pathExists(adsTxtPath)) {
                const txt = await fs.readFile(adsTxtPath, 'utf8');
                const lines = txt.split(/\r?\n/).map(l => l.trim()).filter(l => l && !l.startsWith('#'));
                for (let line of lines) {
                  line = normalizeLine(line);
                  if (!line) continue;

                  if (/^DOMAIN-SUFFIX\s*[,:\-]\s*/i.test(line)) {
                    const val = line.replace(/^DOMAIN-SUFFIX\s*[,:\-]\s*/i, '').trim();
                    if (val) combined.domain_suffix.push(val.replace(/^\./, ''));
                    continue;
                  }
                  if (/^DOMAIN-REGEX\s*[,:\-]\s*/i.test(line)) {
                    const val = line.replace(/^DOMAIN-REGEX\s*[,:\-]\s*/i, '').trim();
                    combined.domain_regex.push(val);
                    continue;
                  }
                  if (/^DOMAIN\b/i.test(line)) {
                    const val = line.replace(/^DOMAIN\S*\s*[,:\-]*\s*/i, '').trim();
                    if (!val) continue;
                    if (val.startsWith('*.')) combined.domain_suffix.push(val.slice(2));
                    else if (/^[A-Za-z0-9.-]+$/.test(val)) combined.domain.push(val);
                    continue;
                  }

                  if (line.startsWith('*.')) {
                    combined.domain_suffix.push(line.slice(2));
                    continue;
                  }
                  if (/^[A-Za-z0-9.-]+$/.test(line)) {
                    combined.domain.push(line);
                    continue;
                  }

                  const parts = line.split(',').map(p => p.trim()).filter(Boolean);
                  const candidate = parts[parts.length - 1] || '';
                  if (!candidate) continue;
                  if (candidate.startsWith('*.')) combined.domain_suffix.push(candidate.slice(2));
                  else if (/^[A-Za-z0-9.-]+$/.test(candidate)) combined.domain.push(candidate);
                }
              }

              // 清洗去重、规范化与排序
              for (const key of ['domain', 'domain_suffix', 'domain_regex']) {
                if (!Array.isArray(combined[key])) continue;
                combined[key] = Array.from(new Set(
                  combined[key].filter(d => typeof d === 'string' && d.trim()).map(d => d.trim())
                ));
                if (key === 'domain_suffix') combined[key] = combined[key].map(d => d.replace(/^\./, ''));
                combined[key] = combined[key].sort();
                if (!combined[key].length) delete combined[key];
              }

              const output = { version: 2, rules: [combined] };
              await fs.ensureDir(path.dirname(outputPath));
              await fs.writeJson(outputPath, output, { spaces: 2 });
              console.log(`Merged ADs_merged.txt -> ${outputPath}`);
            } catch (err) {
              console.error(err);
              process.exit(1);
            }
          })();
          EOF

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add rules/banAd_mini.json
          git diff --cached --quiet || (git commit -m "Update banAd_mini.json" && git push)

